Index: usr.sbin/httpd/httpd.conf.5
@@ -302,6 +302,9 @@
 the FastCGI handler is listening on a TCP socket,
 .Ar socket
 starts with a colon followed by the TCP port number.
+.It Ic script Ar path
+Override the determined script with the one specified by the given
+.Ar path .
 .It Ic strip Ar number
 Strip
 .Ar number
Index: usr.sbin/httpd/httpd.h
@@ -478,6 +478,7 @@
 	uint32_t		 parent_id;
 	char			 name[HOST_NAME_MAX+1];
 	char			 location[HTTPD_LOCATION_MAX];
+	char			 script[PATH_MAX];
 	char			 root[PATH_MAX];
 	char			 path[PATH_MAX];
 	char			 index[PATH_MAX];
Index: usr.sbin/httpd/parse.y
@@ -140,7 +140,7 @@
 %token	PROTOCOLS REQUESTS ROOT SACK SERVER SOCKET STRIP STYLE SYSLOG TCP TICKET
 %token	TIMEOUT TLS TYPE TYPES HSTS MAXAGE SUBDOMAINS DEFAULT PRELOAD REQUEST
 %token	ERROR INCLUDE AUTHENTICATE WITH BLOCK DROP RETURN PASS REWRITE
-%token	CA CLIENT CRL OPTIONAL PARAM FORWARDED CACHE FOUND NOT
+%token	CA CLIENT CRL OPTIONAL PARAM FORWARDED CACHE FOUND NOT SCRIPT
 %token	<v.string>	STRING
 %token  <v.number>	NUMBER
 %type	<v.port>	port
@@ -712,6 +712,16 @@
 			    param->name, param->value);
 			TAILQ_INSERT_HEAD(&srv_conf->fcgiparams, param, entry);
 		}
+		| SCRIPT STRING {
+			if (strlcpy(srv_conf->script, $2,
+			    sizeof(srv_conf->script)) >=
+			    sizeof(srv_conf->script)) {
+				yyerror("script too long");
+				free($2);
+				YYERROR;
+			}
+			free($2);
+		}
 		| STRIP NUMBER			{
 			if ($2 < 0 || $2 > INT_MAX) {
 				yyerror("invalid fastcgi strip number");
@@ -1382,6 +1392,7 @@
 		{ "rewrite",		REWRITE },
 		{ "root",		ROOT },
 		{ "sack",		SACK },
+		{ "script",		SCRIPT },
 		{ "server",		SERVER },
 		{ "socket",		SOCKET },
 		{ "strip",		STRIP },
Index: usr.sbin/httpd/server_fcgi.c
@@ -190,9 +190,12 @@
 	h->type = FCGI_PARAMS;
 	h->content_len = param.total_len = 0;
 
-	alias = desc->http_path_alias != NULL
-	    ? desc->http_path_alias
-	    : desc->http_path;
+	if (*srv_conf->script == '\0') {
+		alias = desc->http_path_alias != NULL
+		    ? desc->http_path_alias
+		    : desc->http_path;
+	} else
+		alias = srv_conf->script;
 
 	query_alias = desc->http_query_alias != NULL
 	    ? desc->http_query_alias
