
Copyright (c) 2020 Matthias Pressfreund

Permission to use, copy, modify, and distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Index: usr.sbin/httpd/config.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: config.c,v 1.57 2019/05/08 19:57:45 reyk Exp $	*/
+/*	$OpenBSD: config.c,v 1.58 2020/08/03 10:55:58 benno Exp $	*/
 
 /*
  * Copyright (c) 2011 - 2015 Reyk Floeter <reyk@openbsd.org>
@@ -135,9 +135,7 @@
 int
 config_getcfg(struct httpd *env, struct imsg *imsg)
 {
-	struct privsep		*ps = env->sc_ps;
 	struct ctl_flags	 cf;
-	unsigned int		 what;
 
 	if (IMSG_DATA_SIZE(imsg) != sizeof(cf))
 		return (0); /* ignore */
@@ -148,8 +146,6 @@
 	env->sc_flags = cf.cf_flags;
 	memcpy(env->sc_tls_sid, cf.cf_tls_sid, sizeof(env->sc_tls_sid));
 
-	what = ps->ps_what[privsep_process];
-
 	if (privsep_process != PROC_PARENT)
 		proc_compose(env->sc_ps, PROC_PARENT,
 		    IMSG_CFG_DONE, NULL, 0);
@@ -683,7 +679,6 @@
 		if ((srv->srv_conf.return_uri = get_data(p + s,
 		    srv->srv_conf.return_uri_len)) == NULL)
 			goto fail;
-		s += srv->srv_conf.return_uri_len;
 	}
 
 	return (0);
Index: usr.sbin/httpd/httpd.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: httpd.c,v 1.68 2018/09/09 21:06:51 bluhm Exp $	*/
+/*	$OpenBSD: httpd.c,v 1.70 2020/08/03 11:05:24 Exp $	*/
 
 /*
  * Copyright (c) 2014 Reyk Floeter <reyk@openbsd.org>
@@ -551,59 +551,6 @@
 	return (0);
 }
 
-const char *
-canonicalize_host(const char *host, char *name, size_t len)
-{
-	struct sockaddr_in	 sin4;
-	struct sockaddr_in6	 sin6;
-	size_t			 i, j;
-	size_t			 plen;
-	char			 c;
-
-	if (len < 2)
-		goto fail;
-
-	/*
-	 * Canonicalize an IPv4/6 address
-	 */
-	if (inet_pton(AF_INET, host, &sin4) == 1)
-		return (inet_ntop(AF_INET, &sin4, name, len));
-	if (inet_pton(AF_INET6, host, &sin6) == 1)
-		return (inet_ntop(AF_INET6, &sin6, name, len));
-
-	/*
-	 * Canonicalize a hostname
-	 */
-
-	/* 1. remove repeated dots and convert upper case to lower case */
-	plen = strlen(host);
-	memset(name, 0, len);
-	for (i = j = 0; i < plen; i++) {
-		if (j >= (len - 1))
-			goto fail;
-		c = tolower((unsigned char)host[i]);
-		if ((c == '.') && (j == 0 || name[j - 1] == '.'))
-			continue;
-		name[j++] = c;
-	}
-
-	/* 2. remove trailing dots */
-	for (i = j; i > 0; i--) {
-		if (name[i - 1] != '.')
-			break;
-		name[i - 1] = '\0';
-		j--;
-	}
-	if (j <= 0)
-		goto fail;
-
-	return (name);
-
- fail:
-	errno = EINVAL;
-	return (NULL);
-}
-
 const char *
 url_decode(char *url)
 {
@@ -1111,50 +1058,6 @@
 	memset(kv, 0, sizeof(*kv));
 }
 
-struct kv *
-kv_inherit(struct kv *dst, struct kv *src)
-{
-	memset(dst, 0, sizeof(*dst));
-	memcpy(dst, src, sizeof(*dst));
-	TAILQ_INIT(&dst->kv_children);
-
-	if (src->kv_key != NULL) {
-		if ((dst->kv_key = strdup(src->kv_key)) == NULL) {
-			kv_free(dst);
-			return (NULL);
-		}
-	}
-	if (src->kv_value != NULL) {
-		if ((dst->kv_value = strdup(src->kv_value)) == NULL) {
-			kv_free(dst);
-			return (NULL);
-		}
-	}
-
-	return (dst);
-}
-
-int
-kv_log(struct evbuffer *log, struct kv *kv)
-{
-	char	*msg;
-
-	if (log == NULL)
-		return (0);
-	if (asprintf(&msg, " [%s%s%s]",
-	    kv->kv_key == NULL ? "(unknown)" : kv->kv_key,
-	    kv->kv_value == NULL ? "" : ": ",
-	    kv->kv_value == NULL ? "" : kv->kv_value) == -1)
-		return (-1);
-	if (evbuffer_add(log, msg, strlen(msg)) == -1) {
-		free(msg);
-		return (-1);
-	}
-	free(msg);
-
-	return (0);
-}
-
 struct kv *
 kv_find(struct kvtree *keys, struct kv *kv)
 {
@@ -1326,22 +1282,6 @@
 	return (buf);
 }
 
-const char *
-print_time(struct timeval *a, struct timeval *b, char *buf, size_t len)
-{
-	struct timeval		tv;
-	unsigned long		h, sec, min;
-
-	timerclear(&tv);
-	timersub(a, b, &tv);
-	sec = tv.tv_sec % 60;
-	min = tv.tv_sec / 60 % 60;
-	h = tv.tv_sec / 60 / 60;
-
-	snprintf(buf, len, "%.2lu:%.2lu:%.2lu", h, min, sec);
-	return (buf);
-}
-
 const char *
 printb_flags(const uint32_t v, const char *bits)
 {
Index: usr.sbin/httpd/httpd.conf.5
@@ -1,4 +1,4 @@
-.\"	$OpenBSD: httpd.conf.5,v 1.110 2020/04/23 21:10:53 jmc Exp $
+.\"	$OpenBSD: httpd.conf.5,v 1.111 2020/05/16 16:58:11 jmc Exp $
 .\"
 .\" Copyright (c) 2014, 2015 Reyk Floeter <reyk@openbsd.org>
 .\"
@@ -14,7 +14,7 @@
 .\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 .\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 .\"
-.Dd $Mdocdate: April 23 2020 $
+.Dd $Mdocdate: May 16 2020 $
 .Dt HTTPD.CONF 5
 .Os
 .Sh NAME
@@ -699,6 +699,11 @@
 Include types definitions from an external file, for example
 .Pa /usr/share/misc/mime.types .
 .El
+.Sh FILES
+.Bl -tag -width /etc/examples/httpd.conf -compact
+.It Pa /etc/examples/httpd.conf
+Example configuration file.
+.El
 .Sh EXAMPLES
 Example configuration files for
 .Nm
Index: usr.sbin/httpd/httpd.h
@@ -1,4 +1,4 @@
-/*	$OpenBSD: httpd.h,v 1.146 2020/02/09 09:44:04 florian Exp $	*/
+/*	$OpenBSD: httpd.h,v 1.149 2020/08/03 11:05:24 benno Exp $	*/
 
 /*
  * Copyright (c) 2006 - 2015 Reyk Floeter <reyk@openbsd.org>
@@ -121,25 +121,13 @@
 	uint8_t		 cf_tls_sid[TLS_MAX_SESSION_ID_LENGTH];
 };
 
-enum key_type {
-	KEY_TYPE_NONE		= 0,
-	KEY_TYPE_COOKIE,
-	KEY_TYPE_HEADER,
-	KEY_TYPE_PATH,
-	KEY_TYPE_QUERY,
-	KEY_TYPE_URL,
-	KEY_TYPE_MAX
-};
-
 TAILQ_HEAD(kvlist, kv);
 RB_HEAD(kvtree, kv);
 
 struct kv {
 	char			*kv_key;
 	char			*kv_value;
 
-	enum key_type		 kv_type;
-
 #define KV_FLAG_INVALID		 0x01
 #define KV_FLAG_GLOBBING	 0x02
 	uint8_t			 kv_flags;
@@ -722,7 +710,6 @@
 int		 expand_string(char *, size_t, const char *, const char *);
 const char	*url_decode(char *);
 char		*url_encode(const char *);
-const char	*canonicalize_host(const char *, char *, size_t);
 const char	*canonicalize_path(const char *, char *, size_t);
 size_t		 path_info(char *);
 char		*escape_html(const char *);
@@ -744,8 +731,6 @@
 struct kv	*kv_extend(struct kvtree *, struct kv *, char *);
 void		 kv_purge(struct kvtree *);
 void		 kv_free(struct kv *);
-struct kv	*kv_inherit(struct kv *, struct kv *);
-int		 kv_log(struct evbuffer *, struct kv *);
 struct kv	*kv_find(struct kvtree *, struct kv *);
 int		 kv_cmp(struct kv *, struct kv *);
 struct media_type
@@ -764,7 +747,6 @@
 struct auth	*auth_byid(struct serverauth *, uint32_t);
 void		 auth_free(struct serverauth *, struct auth *);
 const char	*print_host(struct sockaddr_storage *, char *, size_t);
-const char	*print_time(struct timeval *, struct timeval *, char *, size_t);
 const char	*printb_flags(const uint32_t, const char *);
 void		 getmonotime(struct timeval *);
 
Index: usr.sbin/httpd/parse.y
@@ -1,6 +1,7 @@
 /*	$OpenBSD: parse.y,v 1.114 2020/02/09 09:44:04 florian Exp $	*/
 
 /*
+ * Copyright (c) 2020 Matthias Pressfreund
  * Copyright (c) 2007 - 2015 Reyk Floeter <reyk@openbsd.org>
  * Copyright (c) 2008 Gilles Chehade <gilles@openbsd.org>
  * Copyright (c) 2006 Pierre-Yves Ritschard <pyr@openbsd.org>
@@ -564,7 +565,8 @@
 
 			TAILQ_FOREACH(s, conf->sc_servers, srv_entry) {
 				if ((s->srv_conf.flags & SRVFLAG_LOCATION) &&
-				    s->srv_conf.id == srv_conf->id &&
+				    s->srv_conf.parent_id ==
+				    srv_conf->parent_id &&
 				    strcmp(s->srv_conf.location,
 				    srv_conf->location) == 0)
 					break;
Index: usr.sbin/httpd/proc.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: proc.c,v 1.38 2018/09/09 21:06:51 bluhm Exp $	*/
+/*	$OpenBSD: proc.c,v 1.39 2020/08/03 10:57:21 benno Exp $	*/
 
 /*
  * Copyright (c) 2010 - 2016 Reyk Floeter <reyk@openbsd.org>
@@ -401,7 +401,7 @@
 			free(cause);
 		} else
 			log_warnx("lost child: pid %u", pid);
-	} while (pid != -1 || (pid == -1 && errno == EINTR));
+	} while (pid != -1 || errno == EINTR);
 }
 
 void
Index: usr.sbin/httpd/server_fcgi.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: server_fcgi.c,v 1.81 2020/02/09 09:44:04 florian Exp $	*/
+/*	$OpenBSD: server_fcgi.c,v 1.82 2020/08/03 10:58:38 benno Exp $	*/
 
 /*
  * Copyright (c) 2014 Florian Obser <florian@openbsd.org>
@@ -684,7 +684,7 @@
 
 	/* Date header is mandatory and should be added as late as possible */
 	key.kv_key = "Date";
-	if ((kv = kv_find(&resp->http_headers, &key)) == NULL &&
+	if (kv_find(&resp->http_headers, &key) == NULL &&
 	    (server_http_time(time(NULL), tmbuf, sizeof(tmbuf)) <= 0 ||
 	    kv_add(&resp->http_headers, "Date", tmbuf) == NULL))
 		return (-1);
Index: usr.sbin/httpd/server_file.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: server_file.c,v 1.66 2018/06/15 12:36:05 reyk Exp $	*/
+/*	$OpenBSD: server_file.c,v 1.68 2020/05/22 07:18:17 bentley Exp $	*/
 
 /*
  * Copyright (c) 2006 - 2017 Reyk Floeter <reyk@openbsd.org>
@@ -477,14 +477,17 @@
 
 	/* A CSS stylesheet allows minimal customization by the user */
 	style = "body { background-color: white; color: black; font-family: "
-	    "sans-serif; }\nhr { border: 0; border-bottom: 1px dashed; }\n";
+	    "sans-serif; }\nhr { border: 0; border-bottom: 1px dashed; }\n"
+	    "@media (prefers-color-scheme: dark) {\n"
+	    "body { background-color: #1E1F21; color: #EEEFF1; }\n"
+	    "a { color: #BAD7FF; }\n}";
+
 	/* Generate simple HTML index document */
 	if (evbuffer_add_printf(evb,
 	    "<!DOCTYPE html>\n"
 	    "<html>\n"
 	    "<head>\n"
-	    "<meta http-equiv=\"Content-Type\" content=\"text/html; "
-	    "charset=utf-8\"/>\n"
+	    "<meta charset=\"utf-8\">\n"
 	    "<title>Index of %s</title>\n"
 	    "<style type=\"text/css\"><!--\n%s\n--></style>\n"
 	    "</head>\n"
Index: usr.sbin/httpd/server_http.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: server_http.c,v 1.137 2020/02/25 15:18:41 sthen Exp $	*/
+/*	$OpenBSD: server_http.c,v 1.140 2020/08/03 10:59:53 benno Exp $	*/
 
 /*
  * Copyright (c) 2006 - 2018 Reyk Floeter <reyk@openbsd.org>
@@ -921,15 +921,17 @@
 	/* A CSS stylesheet allows minimal customization by the user */
 	style = "body { background-color: white; color: black; font-family: "
 	    "'Comic Sans MS', 'Chalkboard SE', 'Comic Neue', sans-serif; }\n"
-	    "hr { border: 0; border-bottom: 1px dashed; }\n";
+	    "hr { border: 0; border-bottom: 1px dashed; }\n"
+	    "@media (prefers-color-scheme: dark) {\n"
+	    "body { background-color: #1E1F21; color: #EEEFF1; }\n"
+	    "a { color: #BAD7FF; }\n}";
 
 	/* Generate simple HTML error document */
 	if ((bodylen = asprintf(&body,
 	    "<!DOCTYPE html>\n"
 	    "<html>\n"
 	    "<head>\n"
-	    "<meta http-equiv=\"Content-Type\" content=\"text/html; "
-	    "charset=utf-8\"/>\n"
+	    "<meta charset=\"utf-8\">\n"
 	    "<title>%03d %s</title>\n"
 	    "<style type=\"text/css\"><!--\n%s\n--></style>\n"
 	    "</head>\n"
@@ -1271,8 +1273,7 @@
 				    hostname, FNM_CASEFOLD);
 			}
 			if (ret == 0 &&
-			    (portval == -1 ||
-			    (portval != -1 && portval == srv_conf->port))) {
+			    (portval == -1 || portval == srv_conf->port)) {
 				/* Replace host configuration */
 				clt->clt_srv_conf = srv_conf;
 				srv_conf = NULL;
